//hw12

//#1

<?php
phpinfo();
echo date('Y');
?>


//#2
<?php
$a = 5;
$b = '05';
var_dump($a == $b); // Почему true?
var_dump((int)'012345'); // Почему 12345?
var_dump((float)123.0 === (int)123.0); // Почему false?
var_dump((int)0 === (int)'hello, world'); // Почему true?
?>

//var_dump($a == $b); // Почему true?
Потому что в 7 версии php число со строкой начинающейса на цифру сравнивалось (а тут используется тип сравнения с приведением, но строгий)

//var_dump((int)'012345'); // Почему 12345?
функция возвращает информацию о выражении и тут она сказала, что это число, а раз число то и 0 отрбросила первый и представила в числовом виде

//var_dump((float)123.0 === (int)123.0); // Почему false?
Потому что строгое сравнение и оно сразу обнаружило различие в типах

var_dump((int)0 === (int)'hello, world'); // Почему true?
Потому что в int должно быть (ожидается число), а не буквы, а раз там не число в начале, то он считает, что 'hello, world!' для него равно 0.




//#3*. В примере 2 поменяйте версию PHP с 7 на 8.
У меня не меняется

php 7.0.5
bool(true)
int(12345)
bool(false)
bool(true)

и 

php 8.1.3
bool(true)
int(12345)
bool(false)
bool(true)



4*. Используя только две переменные, поменяйте их значение местами. Например, если a = 1, b = 2, надо, чтобы получилось: b = 1, a = 2. Дополнительные переменные использовать нельзя.

<?php
$a = 12;
$b = 5;
list($b, $a) = array($a, $b);
var_dump($a, $b);

//* я не сам, я в итоге гугли и смотрел, выбрал пример решения который понятен мне.